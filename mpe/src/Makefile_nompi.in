#  (C) 1993 by Argonne National Laboratory and Mississipi State University.
#      All rights reserved.  See COPYRIGHT in top-level directory.
#

##### User configurable options #####

MPI_HOME       = @MPI_HOME@
# We must use mpicc since some defines (like -D_ALL_SOURCE for AIX) are
# included there and not in the "USER_FLAGS".  We should clean this up
# at some point....
CC             = @CC@
CLINKER        = $(CC)
F77            = @F77@
AR             = @AR@ cr
RANLIB         = @RANLIB@
INCLUDE_DIR    = @X_INC@ @MPI_INC@ -I.. -I${srcdir}/../include
PROF_LIBNAME   = @PROF_LIBNAME@
MPE_CFLAGS     = @MPE_CFLAGS@
MPE_GRAPH      = @MPE_GRAPHICS@
MPE_LIBDIR     = @libbuild_dir@
LIB_PATH       = -L$(MPE_LIBDIR) @X_LIB@ @MPI_LIBS@
LIB_DIR        = @LIBDIR@

MPEGRAPHICS_SOURCE  = @MPEGRAPHICS_SOURCE@
MPEGRAPHICS_OBJS    = $(MPEGRAPHICS_SOURCE:.c=.@OBJEXT@)
MPEGRAPHICS_FSOURCE = @MPEGRAPHICS_FSOURCE@
MPEGRAPHICS_FOBJS   = $(MPEGRAPHICS_FSOURCE:.c=.@OBJEXT@)
### End User configurable options ###

SHELL = /bin/sh

@VPATH@
prefix       = @prefix@
exec_prefix  = @exec_prefix@
top_srcdir   = @top_srcdir@
srcdir       = @srcdir@
libbuild_dir = @libbuild_dir@
binbuild_dir = @binbuild_dir@


CFLAGS = $(MPE_CFLAGS) $(MPE_GRAPH) $(INCLUDE_DIR) 

MPE_CSOURCES = $(MPEGRAPHICS_SOURCE) mpe_log.c decomp.c \
               mpe_seq.c mpehname.c
MPE_TSOURCES = $(MPEGRAPHICS_SOURCE) decomp.c mpe_seq.c dbxerr.c
MPE_COBJECTS = $(MPEGRAPHICS_OBJS) mpe_log.@OBJEXT@ decomp.@OBJEXT@ \
               mpe_seq.@OBJEXT@ dbxerr.@OBJEXT@ mpehname.@OBJEXT@
MPE_WSOURCES = $(MPEGRAPHICS_FSOURCE) mpe_logf.c decompf.c mpe_seqf.c
MPE_WOBJECTS = $(MPEGRAPHICS_FOBJS) mpe_logf.@OBJEXT@ decompf.@OBJEXT@ \
               mpe_seqf.@OBJEXT@

MPE_SOURCES = $(MPE_CSOURCES) $(MPE_WSOURCES)
MPE_OBJECTS = $(MPE_COBJECTS) $(MPE_WOBJECTS)

.SUFFIXES: .c .@OBJEXT@ .a @EXEEXT@

.c.@OBJEXT@:
	$(CC) $(CFLAGS) -DMPE_NOMPI -c $<

.c.a:
	$(CC) $(CFLAGS) -DMPE_NOMPI -c $<

#
# It is tempting here to use ... libmpe.a($(MPE_OBJECTS)) as the dependency,
# but this would require that all makes properly handle library dependencies.
# Since makes that DO are the exception rather than the rule, we don't
# use this form
${libbuild_dir}/lib$(PROF_LIBNAME)_nompi.a: $(MPEGRAPHICS_OBJS) mpehname.@OBJEXT@
	$(AR) $@ $?
	$(RANLIB) $@

clean: $(MPEGRAPHICS_OBJS) mpehname.@OBJEXT@
	-rm -f $?
