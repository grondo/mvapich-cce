/* mpeconf.h.in.  Generated automatically from configure.in by autoheader.  */

/* Define to empty if the keyword does not work.  */
#undef const

/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS

/* Define if your processor stores words with the most significant
   byte first (like Motorola and SPARC, unlike Intel and VAX).  */
#undef WORDS_BIGENDIAN

/* Define if Fortran uses lowercase name mangling */
#undef F77_NAME_LOWER

/* Define if Fortran use lowercase followed by an underscore */
#undef F77_NAME_LOWER_USCORE

/* Define if Fortran uses uppercase */
#undef F77_NAME_UPPER

/* Define if Fortran uses two underscores for names with an underscore 
   (and one for names without an underscore) */
#undef F77_NAME_LOWER_2USCORE

/* Define if Fortran leaves case unchanged */
#undef F77_NAME_MIXED

/* Define if Fortran leaves case unchanged, followed by an underscore */
#undef F77_NAME_MIXED_USCORE

/* Enable the large file support, i.e. > 2GB for 32-bit OS */
#undef _LARGEFILE64_SOURCE

/* Enable 64-bit file pointer support for 32-bit OS */
#undef _FILE_OFFSET_BITS

/* Define if you have the mkstemp function.  */
#undef HAVE_MKSTEMP

/* Define if you have the sysinfo function.  */
#undef HAVE_SYSINFO

/* Define if you have the system function.  */
#undef HAVE_SYSTEM

/* Define if you have the <getopt.h> header file.  */
#undef HAVE_GETOPT_H

/* Define if you have the <netdb.h> header file.  */
#undef HAVE_NETDB_H

/* Define if you have the <stdlib.h> header file.  */
#undef HAVE_STDLIB_H

/* Define if you have the <string.h> header file.  */
#undef HAVE_STRING_H

/* Define if you have the <sys/systeminfo.h> header file.  */
#undef HAVE_SYS_SYSTEMINFO_H

/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H

/* Define if MPI_PROCNULL not handled in MPI_Status */
#undef HAVE_BROKEN_STATUS_ON_PROC_NULL

/* Define if using SLOG1  */
#undef HAVE_SLOG1

/* Define if MPI_Wtime available  */
#undef HAVE_MPI_WTIME

/* Define if MPI-IO available  */
#undef HAVE_MPI_IO

/* Define if no MPIO_Request  */
#undef HAVE_NO_MPIO_REQUEST

/* Define if MPI-IO available  */
#undef HAVE_MPI_IO

/* Define if MPI_F2c_xxx available  */
#undef HAVE_MPI_COMM_F2C

/* Define MPI_Fint as int  */
#undef MPI_Fint

/* Define if MPI_Comm_f2c and c2f available  */
#undef HAVE_MPI_COMM_F2C

/* Define as the size of MPI_STATUS_SIZE  */
#undef MPI_STATUS_SIZE

/* Define as the size of MPI_STATUS_SIZE  */
#undef MPI_STATUS_SIZE

/* Define as the size of MPI_STATUS_SIZE  */
#undef MPI_STATUS_SIZE

/* Define if MPI_Status_f2c and c2f available  */
#undef HAVE_MPI_STATUS_F2C

/* Define if MPI_Type_F2c and c2f available  */
#undef HAVE_MPI_TYPE_F2C

/* Define if MPI_Group_f2c and c2f available  */
#undef HAVE_MPI_GROUP_F2C

/* Define if MPI_Request_f2c and c2f available  */
#undef HAVE_MPI_REQUEST_F2C

/* Define if MPI_Op_f2c and c2f available  */
#undef HAVE_MPI_OP_F2C

/* Define if MPI_Errhandler_f2c and c2f available  */
#undef HAVE_MPI_ERRHANDLER_F2C

/* Define as the value for Fortran logical true  */
#undef MPE_F77_TRUE_VALUE

/* Define as the value for Fortran logical false  */
#undef MPE_F77_FALSE_VALUE

/* Define as the value for Fortran logical true  */
#undef MPE_F77_TRUE_VALUE

/* Define as the value for Fortran logical false  */
#undef MPE_F77_FALSE_VALUE

/* Define as the value for Fortran logical true  */
#undef MPE_F77_TRUE_VALUE

/* Define as the value for Fortran logical false  */
#undef MPE_F77_FALSE_VALUE

/* Define if MPI_STATUS_IGNORE available  */
#undef HAVE_MPI_STATUS_IGNORE

/* Define if byte order is bigendian */
#undef WORDS_BIGENDIAN

/* Define if byte order is bigendian */
#undef WORDS_BIGENDIAN

/* Define if byte order is bigendian */
#undef WORDS_BIGENDIAN

/* Define if pointers are 64 bits */
#undef POINTER_64_BITS

/* Define if uname availalble */
#undef HAVE_UNAME

/* Define if gethostbyname available */
#undef HAVE_GETHOSTBYNAME

/* Define if stdarg.h available */
#undef HAVE_STDARG_H

/* Define is stdarg can be used */
#undef USE_STDARG

/* Define if the compiler supports simple prototyptes */
#undef HAVE_PROTOTYPES

/* Define if sighandler_t available */
#undef HAVE_SIGHANDLER_T


/* Define WINDOWS specific features */
/*
   Windows' open() opens an ASCII file by default, add Windows specific
   flag O_BINARY to open()'s argument
*/
#ifdef HAVE_WINDOWS_H
#define OPEN( a, b, c )    open( a, b | O_BINARY, c )
#else
#ifdef _LARGEFILE64_SOURCE
#define OPEN( a, b, c )    open( a, b | O_LARGEFILE, c )
#else
#define OPEN( a, b, c )    open( a, b, c )
#endif
#endif
