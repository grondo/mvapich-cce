// RemoteShellServer.idl : IDL source for RemoteShellServer.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (RemoteShellServer.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(56657461-CDE5-4C12-B379-9FE844195E00),
		dual,
		helpstring("IRemoteShell Interface"),
		pointer_default(unique)
	]
	interface IRemoteShell : IDispatch
	{
		[id(1), helpstring("method LaunchProcess")] HRESULT LaunchProcess(BSTR bCmdLine, BSTR bEnv, BSTR bDir, BSTR bAccount, BSTR bPassword, long *nPid, long *nError, BSTR *bErrorMsg);
		[id(2), helpstring("method GetProcessOutput")] HRESULT GetProcessOutput(VARIANT *vOutput, long *nState, long *nError, BSTR *bErrorMsg);
		[id(3), helpstring("method PutProcessInput")] HRESULT PutProcessInput(VARIANT vInput, long *nError, BSTR *bErrorMsg);
		[id(4), helpstring("method Abort")] HRESULT Abort(long *nError, BSTR *bErrorMsg);
		[id(5), helpstring("method SendBreak")] HRESULT SendBreak(long *nError, BSTR *bErrorMsg);
		[id(6), helpstring("method CreateTempFile")] HRESULT CreateTempFile(BSTR *bFileName, long *nError, BSTR *bErrorMsg);
		[id(7), helpstring("method GetPortFromFile")] HRESULT GetPortFromFile(BSTR bFileName, long *nPort, long *nError, BSTR *bErrorMsg);
		[id(8), helpstring("method GrantAccessToDesktop")] HRESULT GrantAccessToDesktop(BSTR bAccount, BSTR bPassword, long *nError, BSTR *bErrorMsg);
		[id(9), helpstring("method CreateFileMapping")] HRESULT CreateFileMapping(BSTR bName, long *nError, BSTR *bErrorMsg);
		[id(10), helpstring("method GetPortFromMapping")] HRESULT GetPortFromMapping(long *nPort, long *nError, BSTR *bErrorMsg);
	};

[
	uuid(17B24DA4-A30E-4AC4-86E0-F32153B0084C),
	version(1.0),
	helpstring("RemoteShellServer 1.0 Type Library")
]
library REMOTESHELLSERVERLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(43DC2E30-38F9-464B-84E0-1B1BEA64B6DC),
		helpstring("RemoteShell Class")
	]
	coclass RemoteShell
	{
		[default] interface IRemoteShell;
	};
};
