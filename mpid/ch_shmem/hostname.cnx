#if 0 && defined(MPI_cspp)
#include <sys/cnx_sysinfo.h>
#include <sys/cnx_pattr.h>
void SY_GetHostName( name, nlen )
int  nlen;
char *name;
{
    cnx_is_target_t target;
    char  p[1024], *addr = p;
    struct pattributes pattrib;

/* This sets the target to get process info for my process */
    cnx_sysinfo_target_process( &target, getpid() );

/* An id of CNX_IS_PROCESS_BASIC_INFO gets information on the process, but 
   not the location of the process */
    cnx_sysinfo( id, target, addr, nel, lel, elavail );

/* Get the subcomplex id into pattrib.pattr_scid */
    cnx_getpattr( getpid(), CNX_PATTR_SCID, &pattrib );

/* Now that we have the subcomplex id, we use sysinfo to get more info about 
   it (but can we get the information about a SINGLE node, or does this
   tell us about the whole subcomplex? 
   */
    cnx_sysinfo_target_( &target, pattrib.pattr_scid );
    cnx_sysinfo( CNS_IS_SCNODE_BASIC_INFO, &scnode_info, .... );
    scnode_info.node , .physical_node, cpus[CNX_MAX_CPUS_PER_NODE]
	}
#else

#ifdef HAVE_UNAME
#include <sys/utsname.h>
#endif
#ifdef HAVE_SYSINFO
#include <sys/systeminfo.h>
#endif
void SY_GetHostName( name, nlen )
int  nlen;
char *name;
{
#if defined(HAVE_GETHOSTNAME)
  gethostname(name, nlen);
#elif defined(solaris) || defined(HAVE_UNAME)
  struct utsname utname;
  uname(&utname);
  strncpy(name,utname.nodename,nlen);
#else 
  sprintf( name, "%d", MPID_MyWorldRank );
#endif
/* See if this name includes the domain */
  if (!strchr(name,'.')) {
    int  l, rc;
    l = strlen(name);
    name[l++] = '.';
    name[l] = 0;  /* In case we have neither SYSINFO or GETDOMAINNAME */
    /* Note that IRIX does not support SI_SRPC_DOMAIN */
    rc = -1;
#if defined(solaris) || defined(HAVE_SYSINFO)
    rc = sysinfo( SI_SRPC_DOMAIN,name+l,nlen-l);
#endif
#if defined(HAVE_GETDOMAINNAME)
    if (rc == -1) 
	getdomainname( name+l, nlen - l );
#endif
  }
}
#endif
