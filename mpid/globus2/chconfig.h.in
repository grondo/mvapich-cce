#if !defined(MPICH_GLOBUS2_CHCONFIG_H)
#define MPICH_GLOBUS2_CHCONFIG_H

/*
 * Are we using the vendor's MPI as one of our transport mechanisms?
 * (value supplied by setup_globus2)
 */
#if @VMPI@
#   define VMPI
#endif

/*
 * Tell MPICH that the globus2 device always does its own data conversion.
 */
#define MPID_DOES_DATACONV

/*
 * Tell MPICH what supplementary functions we are providing (and expect it
 * to call)
 */
#if !defined(BUILDING_VMPI_PROTO_MODULE)
#   define MPID_ZERO_STATUS_COUNT(status) MPID_ZeroStatusCount(status)
#   define MPID_HAS_HETERO

#   ifndef MPID_HAS_GET_ELEMENTS
#       define MPID_HAS_GET_ELEMENTS
#   endif

#   ifndef MPID_HAS_GET_COUNT
#       define MPID_HAS_GET_COUNT
#   endif

#   define MPID_CommInit MPID_Comm_init
#   define MPID_CommFree MPID_Comm_free

#   if defined(VMPI)
#       define MPID_HAS_TYPE_PERMANENT_SETUP
#       define MPID_HAS_TYPE_COMMIT
#       define MPID_HAS_TYPE_FREE
#       define MPID_HAS_TYPE_CONTIGUOUS
#       define MPID_HAS_TYPE_HINDEXED
#       define MPID_HAS_TYPE_HVECTOR
#       define MPID_HAS_TYPE_STRUCT
#   endif
#endif

/*
 * VMPI information provided by setup_globus2
 */
#if defined(VMPI)
#   define VENDOR_MPI_DATATYPE_SIZE @VENDOR_MPI_DATATYPE_SIZE@
#   define VENDOR_MPI_REQUEST_SIZE @VENDOR_MPI_REQUEST_SIZE@
#   define VENDOR_HAS_MPI_2COMPLEX @VENDOR_HAS_MPI_2COMPLEX@
#   define VENDOR_HAS_MPI_2DOUBLE_COMPLEX @VENDOR_HAS_MPI_2DOUBLE_COMPLEX@
#   define VENDOR_HAS_MPI_LONG_LONG @VENDOR_HAS_MPI_LONG_LONG@
#   define VENDOR_HAS_MPI_LONG_LONG_INT @VENDOR_HAS_MPI_LONG_LONG_INT@
#endif /* defined(VMPI) */

/*
 * Debugging information provided by setup_globus2
 */
#define DEBUG_ENABLED			@DEBUG_ENABLED@
#define DEBUG_MODULES_ENABLED		@DEBUG_MODULES_ENABLED@
#define DEBUG_INFO_ENABLED      	@DEBUG_INFO_ENABLED@

#include "globus_common.h"
#include "globus_dc.h"
#include "globus_io.h"
#include "globus_ftp_control.h"

#endif /* MPICH_GLOBUS2_CHCONFIG_H */
