#! /bin/sh
#
# Script to compile and link Globus programs.  This script borrows heavily
# from the code found in the mpicc script.
# This is used to produce _both_ mpich-globus2-{f77,f90}, which 
# are, in turn, called by mpich/bin/mpi{f77,f90}.
#

#
# Configure provided information
#
GC="@GC@"
GCFLAGS="@GCFLAGS@"
GL="@GL@"
GLFLAGS="@GLFLAGS@"
LIBS="@LIBS@"

TEST_GC="@TEST_GC@"
TEST_GCFLAGS="@TEST_GCFLAGS@"
TEST_GL="@TEST_GL@"
TEST_GLFLAGS="@TEST_GLFLAGS@"

F77_SED=@F77_SED@

#
# Initialize local variables
#
DoLink=1
DoCompile=0
RemoveDefaultOpt=0
opt_args=
compile_args=
link_args=
HasDashC=0
verbose=0
vmpi_prefix="VMPI_"
vmpi_sfiles=
vmpi_ofiles=

#
# Parse/interpret command line arguments
#
while test $# -gt 0 ; do
    case "$1" in 
	-c)
	# If -c is NOT specified, then we need to perform a link step.
	compile_args="$compile_args $1"
        # If -o was set, then we need to move the output file option
        # to the compile line (note that this is non-standard, and should
        # not be used in portable codes)
        if [ $DoLink = 1 -a -n "$outputfilename" ] ; then
	    compile_args="$compile_args -o $outputfilename"
        fi
	DoLink=0
	HasDashC=1
	;;
        -o)
	# Need to link
        if [ $HasDashC = 1 ] ; then
            # Some BUT NOT ALL compilers support -o with -c.  Allow
            # the user to make use of the feature, IF IT EXISTS.
            compile_args="$compile_args $1"	
        else
	    link_args="$link_args $1 $2"
	    outputfilename="$2"
	    DoLink=1
	    shift
        fi
	;;
	-E|-M)
	# For compilers that support -E as a way to get at the C preprocessor
	# Also, for compilers that support -M for creating dependencies
	compile_args="$compile_args $1"
	HasDashC=1
	DoLink=0
	;;
	-O* | -g)
	RemoveDefaultOpt=1
	opt_args="$opt_args $1"
	;;
	-v)
	verbose=1
	compile_args="$compile_args -v"
	link_args="$link_args -v"
	;;
	-l*)
	# This SHOULD be the -l<lib> argument.  Only for the linker
	link_args="$link_args $1"
	;;
	
	# Unrecognized args.  Because we do an eval, we need to
	# carefully quote any args that contain quotes.
        *\"*) 
	qarg="'"$1"'"
	compile_args="$compile_args $qarg"
	link_args="$link_args $qarg"
	;;
        *\'*) 
	qarg='\"'"$1"'\"'
	compile_args="$compile_args $qarg"
	link_args="$link_args $qarg"
	;;
        *)
	if [ -s "$1" ] ; then
	    ext=`expr "$1" : '.*\(\..*\)'`
            if [ "$ext" = ".f" -o "$ext" = ".F" -o "$ext" = ".f90" -o \
                 "$ext" = ".for" -o "$ext" = ".FOR" ] ; then
	        fname=`basename $1 $ext`
		if test $F77_SED -eq 0 ; then
		    src="$1"
		else
		    srcdir=`echo "$1" | sed -e 's-[^/]*$--'`
		    srcfile=`echo "$1" | sed -e 's-.*/--'`
		    src=${srcdir}${vmpi_prefix}${srcfile}
		    sed -e 's/^[mM][pP][iI]_/MPQ_/g' \
			-e 's/^[pP][mM][pP][iI]_/PMPQ_/g' \
			-e 's/\([^A-Za-z0-9_]\)[mM][pP][iI]_/\1MPQ_/g' \
			-e 's/\([^A-Za-z0-9_]\)[pP][mM][pP][iI]_/\1PMPQ_/g' \
			$1 >$src
		    vmpi_sfiles="$vmpi_sfiles $src"
		    vmpi_ofiles="$vmpi_ofiles $fname.o"
		fi
	        DoCompile=1
	        compile_args="$compile_args $src"
	        link_args="$link_args $fname.o"
	    elif [ "$ext" = ".o" ] ; then
		if [ $HasDashC = 1 ] ; then
	            compile_args="$compile_args $1"
                else
	            DoLink=1
	            link_args="$link_args $1"
                fi
	    else
	        compile_args="$compile_args $1"
	        link_args="$link_args $1"
	    fi
	else
            compile_args="$compile_args $1"
	    link_args="$link_args $1"
	fi
	;;
    esac

    shift
done

#
# Set compiler information
#
# Note: we may use different compilers when running configure than we do 
# when compile a user application
#
if test -z "${MPICH_GLOBUS2_CONFIGURE_ACTIVE}" ; then
    gc=$GC
    gc_flags=$GCFLAGS
    gl=$GL
    gl_flags=$GLFLAGS
    libs=$LIBS
else
    gc=$TEST_GC
    gc_flags=$TEST_GCFLAGS
    gl=$TEST_GL
    gl_flags=$TEST_GLFLAGS
    libs=
fi

#
# Remove -O and -g from the default options if the user has supplied his/her
# own set of optimization options.
#
if test $RemoveDefaultOpt -ne 0 ; then
    gc_flags=`echo "$gc_flags" | \
	sed -e 's/[ 	][ 	]*-g[ 	][ 	]*/ /g' \
            -e 's/^-g[ 	][ 	]*//' \
            -e 's/[ 	][ 	]*-g$//' \
	    -e 's/[ 	][ 	]*-O[^ 	]*[ 	]*/ /g' \
            -e 's/^-O[^ 	]*[ 	][ 	]*//' \
            -e 's/[ 	][ 	]*-O[^ 	]*$//'`
    compile_args="$opt_args $compile_args"
fi

status=0

if test $DoCompile -eq 1 ; then 
    if test $HasDashC -ne 1 ; then
        compile_args="-c $compile_args"
    fi
    if test $verbose -ne 0 ; then
	echo $gc $compile_args $gc_flags
    fi
    eval $gc $compile_args $gc_flags
    status=$?
    if test $status -ne 0 ; then 
	exit $status
    fi
fi

if test $F77_SED -ne 0 ; then
    for f in $vmpi_sfiles ; do
    	if test -f ${f} ; then
    	    rm -f ${f}
    	fi
    done
    
    for f in $vmpi_ofiles ; do
    	objdir=`echo ${f} | sed -e 's-[^/]*$--'`
    	objfile=`echo ${f} | sed -e 's-.*/--'`
    	obj=${objdir}${vmpi_prefix}${objfile}
    	if test -f $obj ; then
    	    mv -f $obj $f
    	fi
    done
fi

if test $DoLink -eq 1 ; then
    if test $verbose -ne 0 ; then
	echo $gl $link_args $gl_flags $libs
    fi
    eval $gl $link_args $gl_flags $libs
    status=$?
fi
exit $status
