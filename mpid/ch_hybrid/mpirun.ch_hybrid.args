#! /bin/sh
#
# This script gets included by the MPICH mpirun.args script
# when MPICH is configured with the VIA device.
# It collects MVICH (VIA) specific args for later use in
# the mpirun.via script.

#######################################################################
# Copyright (C) 1999-2001 The Regents of the University of California
# (through E.O. Lawrence Berkeley National Laboratory), subject to
# approval by the U.S. Department of Energy.
#
# Your use of this software is under license -- the license agreement is
# attached and included in the MVICH top-level directory as LICENSE.TXT
# or you may contact Berkeley Lab's Technology Transfer Department at
# TTD@lbl.gov.
#
# NOTICE OF U.S. GOVERNMENT RIGHTS. The Software was developed under
# funding from the U.S. Government which consequently retains certain
# rights as follows: the U.S. Government has been granted for itself and
# others acting on its behalf a paid-up, nonexclusive, irrevocable,
# worldwide license in the Software to reproduce, prepare derivative
# works, and perform publicly and display publicly. Beginning five (5)
# years after the date permission to assert copyright is obtained from
# the U.S. Department of Energy, and subject to any subsequent five (5)
# year renewals, the U.S. Government is granted for itself and others
# acting on its behalf a paid-up, nonexclusive, irrevocable, worldwide
# license in the Software to reproduce, prepare derivative works,
# distribute copies to the public, perform publicly and display
# publicly, and to permit others to do so.
#######################################################################

case $arg in 
    --INIT)
        # init any variables specific to VIA
	via_xterm=""
	via_debug=""
	via_show=""
	via_paramfile=""
	via_hostfile=""
	via_hostlist=""
	via_usempd=""
	via_tv=""
	;; 
    -usempd)
	via_usempd=1;
        device_knows_arg=1
	;;
    -xterm)
     	via_xterm=$arg
        device_knows_arg=1
	;;
    -debug)
      	via_debug=$arg
        device_knows_arg=1
      	;;
    -tv)
        via_tv=$arg
        device_knows_arg=1
        ;;
    -show)
      	via_show=$arg
        device_knows_arg=1
	;;
    -paramfile)
	via_paramfile="$1"
	shift
        device_knows_arg=1
	;;
    -hostfile)
      	via_hostfile="$1"
	shift
        device_knows_arg=1
	;;
    -hostlist)
        via_listcnt=0
	via_hostlist=""
	# now collect list and count number of items
	while [ 1 -le $# -a $via_listcnt -lt $np ] ; do
	   via_firstchar=`echo $1 | cut -c 1`
	   if [ $via_firstchar = '-' ] ; then
	        break
           fi
	   via_listcnt=`expr $via_listcnt + 1`
           via_hostlist="$via_hostlist $1"
	   shift
	done
      	if [ $via_listcnt -ne $np ] ; then
	   echo "$np processes, only supplied $via_listcnt hosts in list: $via_hostlist"
           exit 1
        fi
        device_knows_arg=1
	;;
    -help | -usage | --usage)
cat <<EOF
    Special Options for via device:

    -paramfile <file>
            read via device specific parameters from this file.
    -hostfile <file>
            read hosts from this file, one per line.
    -hostlist node1 node2 ... 
            list of hosts that should run job, one per process
    -show   show job launcher commands but dont execute them.
    -debug  run debugger on each process of job.
    -xterm  run each process in an xterm
    -rsh    use rsh to start processes 
    -ssh    use ssh to start processes
    -tv     use totalview debugger. Totalview cmd defined with TOTALVIEW env.
EOF
esac
