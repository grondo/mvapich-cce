/* DO NOT EDIT THIS FILE */
/* PRODUCED AUTOMATICALLY BY MakeErrInc and GetMsgCat */
/* MPI_SUCCESS */
static char *(kind0[])={"No Error",(char *)0};
/* MPI_ERR_BUFFER */
static char *(kind1[]) = {
   "Invalid buffer pointer",
    "",
   "Cannot attach buffer when a buffer already exists",
    "",
   "Insufficent space available in user-defined buffer",
   "Insufficent space available in user-defined buffer: %d requested and %d available",
   "Invalid buffer pointer: Arguments must specify different buffers (no aliasing)",
    "",
   "Buffer size is invalid",
   "Buffer size (%d) is invalid",
    (char *)0};
/* MPI_ERR_COUNT */
static char *(kind2[]) = {
   "Invalid count argument",
   "Invalid count argument is %d",
   "Invalid count argument in count array",
   "Invalid count argument: count[%d] is %d",
    (char *)0};
/* MPI_ERR_TYPE */
static char *(kind3[]) = {
   "Invalid datatype argument",
    "",
   "Datatype has not been committed",
    "",
   "Datatype is MPI_TYPE_NULL",
   "Datatype argument is not a valid datatype\nSpecial bit pattern in datatype is incorrect.  May indicate an \nout-of-order argument or a deleted datatype",
   "Datatype argument is not a valid datatype\nSpecial bit pattern %x in datatype is incorrect.  May indicate an \nout-of-order argument or a deleted datatype",
   "Cannot free permanent data type",
   "Cannot free permanent data type %s",
   "Cannot get contents of a permanent data type",
   "Cannot get contents of permanent data type %s",
   "Datatype in array is NULL",
   "Datatype in array %s[%d] is NULL",
    (char *)0};
/* MPI_ERR_TAG */
static char *(kind4[]) = {
   "Invalid message tag",
   "Invalid message tag %d",
    (char *)0};
/* MPI_ERR_COMM */
static char *(kind5[]) = {
   "Invalid communicator",
    "",
   "Null communicator",
    "",
   "Intercommunicator is not allowed",
    "",
   "Intracommunicator is not allowed",
    "",
   "Communicator argument is not a valid communicator\nSpecial bit pattern in communicator is incorrect.  May indicate an \nout-of-order argument or a freed communicator",
   "Communicator argument is not a valid communicator\nSpecial bit pattern %x in communicator is incorrect.  May indicate an \nout-of-order argument or a freed communicator",
   "Error setting communicator name",
    "",
   "Peer communicator is not valid",
   "Local communicator must not be MPI_COMM_NULL",
    (char *)0};
/* MPI_ERR_RANK */
static char *(kind6[]) = {
   "Invalid rank",
   "Invalid rank %d",
   "Duplicate ranks in rank array",
   "Duplicate ranks in rank array: ranks[%d] = %d = ranks[%d]",
   "Invalid rank in array",
   "Invalid rank in array: ranks[%d] = %d not between 0 and %d",
   "Error specifying local_leader",
   "Error specifying local_leader; value %d not in between 0 and %d",
   "Error specifying remote_leader",
   "Error specifying remote_leader; value %d not between 0 and %d",
    (char *)0};
/* MPI_ERR_ROOT */
static char *(kind7[]) = {
   "Invalid root",
   "Invalid root %d",
   "Invalid root is too large",
   "Invalid root %d > %d",
    (char *)0};
/* MPI_ERR_GROUP */
static char *(kind8[]) = {
   "Invalid group",
    "",
   "Invalid group: Null group",
    "",
   "Group argument is not a valid group\nSpecial bit pattern in group is incorrect.  May indicate an \nout-of-order argument or a freed group",
   "Group argument is not a valid group\nSpecial bit pattern %x in group is incorrect.  May indicate an \nout-of-order argument or a freed group",
    (char *)0};
/* MPI_ERR_OP */
static char *(kind9[]) = {
   "Invalid MPI_Op",
    "",
   "Invalid MPI_Op: Null MPI_Op",
    "",
   "MPI_Op operation not defined for this datatype ",
   "MPI_Op operation not defined for datatype %s",
    (char *)0};
/* MPI_ERR_TOPOLOGY */
static char *(kind10[]) = {
   "Invalid topology",
    "",
   "Topology size is larger than size of communicator",
   "Topology size %d is greater than communicator size %d",
   "Specified edge < 0 or > nnodes",
   "edges[%d] = %d is not between 0 and %d",
    (char *)0};
/* MPI_ERR_DIMS */
static char *(kind11[]) = {
   "Invalid dimension argument",
   "Invalid dimension argument %d",
   "Invalid dimension array argument",
   "Invalid dimension argument dims[%d] = %d",
   "Tensor product size does not match nnodes",
   "Tensor product size (%d) does not match nnodes (%d)",
   "Can not partition nodes as requested",
   "Number of dimensions is too large",
   "Number of dimensions %d too large (limit is %d)",
    (char *)0};
/* MPI_ERR_ARG */
static char *(kind12[]) = {
   "Invalid argument",
   "Invalid argument %s",
   "Invalid error code",
   "Invalid error code %d",
   "Null parameter",
    "",
    "",
    "",
   "Cannot free permanent attribute key",
    "",
    "",
    "",
   "Cannot free permanent MPI_Op",
    "",
   "Address of location given to MPI_ADDRESS does not fit in Fortran integer",
   "Address of location given to MPI_ADDRESS (%lx) does not fit in Fortran integer",
    "",
    "",
   "Invalid keyval",
    "",
   "Null MPI_Errhandler",
    "",
   "MPI_Errhandler argument is not a valid errorhandler\nSpecial bit pattern %x in errhandler is incorrect.  May indicate an \nout-of-order argument or a deleted error handler",
    "",
   "Invalid use of MPI_STATUS_IGNORE or MPI_STATUSES_IGNORE",
    "",
   "Range does not terminate",
   "Range (%d,%d,%d) does not terminate",
   "Zero stride is incorrect",
    "",
   "Invalid value in array",
   "Invalid value in %s[%d] = %d",
   "Invalid argument",
   "Invalid %s argument = %d",
   "Key not in communicator",
   "Key %d not in communicator",
   "For MPI_DISTRIBUTE_NONE, the number of processes in that dimension of the grid must be 1",
   "For MPI_DISTRIBUTE_NONE, the number of processes in that dimension of the grid must be 1 (array_of_psizes[%d] = %d)",
   "Unknown distribution type",
    "",
   "Value of position must be nonnegative",
   "Value of position must be nonnegative (is %d)",
   "Null Keyval",
    "",
   "Invalid value in array_of_distribs",
   "Invalid value in array_of_distribs[%d] = %d",
   "Invalid order argument",
   "Invalid order argument = %d",
   "m must be positive for a block(m) distribution",
   "m = %d must be positive for a block(m) distribution",
   "m * nprocs is < array_size and is not valid for a block(m) distribution",
   "m * nprocs = %d is < array_size = %d and is not valid for a block(m) distribution",
   "m must be positive for a cyclic(m) distribution",
   "m = %d must be positive for a cyclic(m) distribution",
   "Invalid valuelen argument; must be positive",
   "Invalid valuelen argument; must be positive, is %d",
   "valuelen is greater than the amount of space available in value",
   "valuelen = %d is greater than the amount of space available in value = %d",
   "n is an invalid number",
   "n = %d is an invalid number",
   "Value is an invalid address",
   "Value is an invalid address",
    "",
    "",
   "Invalid offset argument",
    "",
   "Null datarep argument",
    "",
   "Invalid count argument",
    "",
   "Invalid size argument",
    "",
   "Invalid whence argument",
    "",
   "flag argument must be the same on all processes",
    "",
   "Invalid displacement argument",
    "",
   "Invalid etype argument",
    "",
   "Invalid filetype argument",
    "",
   "size argument must be the same on all processes",
    "",
   "offset points to a negative location in the file",
    "",
   "whence argument must be the same on all processes",
    "",
   "offset argument must be the same on all processes",
    (char *)0};
/* MPI_ERR_UNKNOWN */
static char *(kind13[]) = {
   "Unknown error",
    (char *)0};
/* MPI_ERR_TRUNCATE */
static char *(kind14[]) = {
   "Message truncated",
   "Message truncated; %d bytes received in a buffer of size %d",
    (char *)0};
/* MPI_ERR_OTHER */
static char *(kind15[]) = {
   "Other MPI error",
    "",
   "System resource limit exceeded",
    "",
   "Ready send had no matching receive",
   "Ready send from %d to %d with tag %d had no matching receive",
   "Cannot call MPI_INIT more than once",
    "",
   "MPI_INIT must be called before other MPI routines",
    "",
   "MPIRUN chose the wrong device",
   "MPIRUN chose the wrong device %s; program needs device %s",
   "Could not convert index into a pointer\nThe index may be an incorrect argument.\nPossible sources of this problem are a missing \"include 'mpif.h'\",\na misspelled MPI object (e.g., MPI_COM_WORLD instead of MPI_COMM_WORLD)\nor a misspelled user variable for an MPI object (e.g., \ncom instead of comm).",
   "Could not convert index %d into a pointer\nThe index may be an incorrect argument.\nPossible sources of this problem are a missing \"include 'mpif.h'\",\na misspelled MPI object (e.g., MPI_COM_WORLD instead of MPI_COMM_WORLD)\nor a misspelled user variable for an MPI object (e.g., \ncom instead of comm).",
   "Pointer conversions exhausted\nToo many MPI objects may have been passed to/from Fortran\nwithout being freed",
    "",
   "Error in recovering Fortran pointer; already freed",
   "Error in recovering Fortran pointer (%d); already freed",
   "Specified buffer is smaller than MPI_BSEND_OVERHEAD",
   "Specified buffer is smaller than MPI_BSEND_OVERHEAD = %d",
   "MPIRUN chose the wrong machine type",
   "MPIRUN chose the wrong machine %s; program needs machine %s",
   "User defined attribute copy routine returned non-zero error code",
   "User defined attribute copy routine returned error code %d",
    (char *)0};
/* MPI_ERR_INTERN */
static char *(kind16[]) = {
   "Internal MPI error!",
    "",
   "Internal MPI error! Out of internal memory",
    "",
   "Internal MPI error! Cray restriction: Either both or neither buffers must be of type character",
    "",
   "Internal MPI error! WARNING - sender format not implemented!",
   "Error in packing data: sender format not implemented!",
   "Error in packing data: Unknown internal message format",
   "Error in packing data: Unknown internal message format %d",
   "Internal MPI error! Attribute in communicator is not a valid attribute\nSpecial bit pattern in attribute is incorrect.",
   "Internal MPI error! Attribute in communicator is not a valid attribute\nSpecial bit pattern %x in attribute is incorrect.",
   "No more available contexts",
   "Internal MPI error! Error in BSEND data, corruption detected",
   "Internal MPI error! Error in BSEND data, corruption detected in %s",
   "Error in BSEND data",
   "Error in BSEND data, corruption detected at end of PrepareBuffer",
   "Error in BSEND data, corruption detected at data end of PrepareBuffer",
   "Internal MPI error! Invalid data for factorAndcombine",
    (char *)0};
/* MPI_ERR_IN_STATUS */
static char *(kind17[]) = {
   "Error code is in status",
    (char *)0};
/* MPI_ERR_PENDING */
static char *(kind18[]) = {
   "Pending request (no error)",
    (char *)0};
/* MPI_ERR_REQUEST */
static char *(kind19[]) = {
   "Invalid mpi_request handle",
    "",
   "Invalid mpi_request handle: Null request",
    (char *)0};
/* MPI_ERR_ACCESS */
static char *(kind20[]) = {
   "???",
    (char *)0};
/* MPI_ERR_AMODE */
static char *(kind21[]) = {
   "Invalid amode",
    "",
   "Exactly one of MPI_MODE_RDONLY, MPI_MODE_WRONLY, or MPI_MODE_RDWR must be specified",
    "",
   "Cannot use MPI_MODE_CREATE or MPI_MODE_EXCL with MPI_MODE_RDONLY",
    "",
   "Cannot specify MPI_MODE_SEQUENTIAL with MPI_MODE_RDWR",
    (char *)0};
/* MPI_ERR_BAD_FILE */
static char *(kind22[]) = {(char *)0};
/* MPI_ERR_CONVERSION */
static char *(kind23[]) = {(char *)0};
/* MPI_ERR_DUP_DATAREP */
static char *(kind24[]) = {(char *)0};
/* MPI_ERR_FILE_EXISTS */
static char *(kind25[]) = {(char *)0};
/* MPI_ERR_FILE_IN_USE */
static char *(kind26[]) = {(char *)0};
/* MPI_ERR_FILE */
static char *(kind27[]) = {
   "Invalid file handle",
    "",
   "Null file handle",
    "",
   "Corrupted file handle",
    (char *)0};
/* MPI_ERR_INFO */
static char *(kind28[]) = {
   "Invalid MPI_Info",
    (char *)0};
/* MPI_ERR_INFO_KEY */
static char *(kind29[]) = {
   "Invalid MPI_Info key address",
   "MPI_Info Key length is too long",
   "MPI_Info Key length is %d; must be no more than %d",
   "MPI_Info Key is empty",
    (char *)0};
/* MPI_ERR_INFO_VALUE */
static char *(kind30[]) = {
    "",
   "MPI_Info value is null",
   "Value is longer than MPI_MAX_INFO_VAL",
   "Value of length %d is longer than MPI_MAX_INFO_VAL = %d",
    (char *)0};
/* MPI_ERR_INFO_NOKEY */
static char *(kind31[]) = {
   "MPI_Info key is not defined",
   "MPI_Info key %s is not defined",
    (char *)0};
/* MPI_ERR_IO */
/* MPI_ERR_IO */
static char *(kind32[]) = {
   "I/O Error",
   "%s",
   "Only an integral number of etypes can be accessed",
    "",
   "Can't determine the file-system type. Check the filename/path you provided and try again. Otherwise, prefix the filename with a string to indicate the type of file sytem (piofs:, pfs:, nfs:, ufs:, hfs:, xfs:, sfs:, pvfs:)",
    "",
   "ROMIO has not been configured to use the PFS file system",
    "",
   "ROMIO has not been configured to use the PIOFS file system",
    "",
   "ROMIO has not been configured to use the UFS file system",
    "",
   "ROMIO has not been configured to use the NFS file system",
    "",
   "ROMIO has not been configured to use the HFS file system",
    "",
   "ROMIO has not been configured to use the XFS file system",
    "",
   "ROMIO has not been configured to use the SFS file system",
    "",
   "ROMIO has not been configured to use the PVFS file system",
    "",
   "Only one active split collective I/O operation allowed per file handle",
    "",
   "No previous split collective begin",
    "",
   "There are outstanding nonblocking I/O operations on this file",
    "",
   "ROMIO tries to optimize this access by doing a read-modify-write, but is unable to read the file. Please give the file read permission and open it with MPI_MODE_RDWR.",
    "",
   "To preallocate disk space, ROMIO needs to read the file and write it back, but is unable to read the file. Please give the file read permission and open it with MPI_MODE_RDWR.",
    "",
   "Filetype must be constructed out of one or more etypes",
    (char *)0};
/* MPI_ERR_NAME */
static char *(kind33[]) = {(char *)0};
/* MPI_ERR_NOMEM */
static char *(kind34[]) = {(char *)0};
/* MPI_ERR_NOT_SAME */
static char *(kind35[]) = {(char *)0};
/* MPI_ERR_NO_SPACE */
static char *(kind36[]) = {(char *)0};
/* MPI_ERR_NO_SUCH_FILE */
static char *(kind37[]) = {(char *)0};
/* MPI_ERR_PORT */
static char *(kind38[]) = {(char *)0};
/* MPI_ERR_QUOTA */
static char *(kind39[]) = {(char *)0};
/* MPI_ERR_READ_ONLY */
static char *(kind40[]) = {(char *)0};
/* MPI_ERR_SERVICE */
static char *(kind41[]) = {(char *)0};
/* MPI_ERR_SPAWN */
static char *(kind42[]) = {(char *)0};
/* MPI_ERR_UNSUPPORTED_DATAREP */
static char *(kind43[]) = {
   "Unsupported data representation",
    "",
   "Only native data representation currently supported",
    (char *)0};
/* MPI_ERR_UNSUPPORTED_OPERATION */
static char *(kind44[]) = {
   "Unsupported operation",
    "",
   "Shared file pointer not supported on PIOFS and PVFS",
    "",
   "Cannot use this function when file is opened with amode MPI_MODE_SEQUENTIAL",
    "",
   "Cannot read from a file opened with amode MPI_MODE_WRONLY",
    "",
   "MPI_MODE_SEQUENTIAL not supported on PIOFS and PVFS",
};
/* MPI_ERR_WIN */
static char *(kind45[]) = {
   "Invalid MPI_Win",
    (char *)0};
/*  */
static char *(kind46[]) = {
   "Error executing program or script",
};
static char **(errmsgs[])={
kind0,kind1,kind2,kind3,kind4,kind5,kind6,kind7,kind8,kind9,kind10,kind11,kind12,kind13,kind14,kind15,kind16,kind17,kind18,kind19,kind20,kind21,kind22,kind23,kind24,kind25,kind26,kind27,kind28,kind29,kind30,kind31,kind32,kind33,kind34,kind35,kind36,kind37,kind38,kind39,kind40,kind41,kind42,kind43,kind44,kind45,kind46,};
#define MPIR_MAX_ERRCLASS 47
