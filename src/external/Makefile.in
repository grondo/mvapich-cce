#  (C) 1997 by Argonne National Laboratory and Mississipi State University.
#      All rights reserved.  See COPYRIGHT in top-level directory.
#

CC          = @CC@
AR          = @AR@
RANLIB      = @RANLIB@
OPTFLAGS    = @OPTFLAGS@
OPTFLAGSC   = @OPTFLAGSC@
prefix      = @prefix@
top_srcdir  = @top_srcdir@
srcdir      = @srcdir@
libbuild_dir      = @libbuild_dir@

DEFS        = @DEFS@ ${MPIPROFILE} -I. -I${srcdir} @mpich_includes@
CFLAGS      = @CFLAGS@ 

SHELL       = /bin/sh

@VPATH@

.SUFFIXES:
.SUFFIXES: .o .c

LIBS = ${libbuild_dir}/lib@MPILIBNAME@.a


MPI_COBJECTS = statuscancel.o statuselm.o type_get_cont.o type_get_env.o
MPI_CSOURCES = statuscancel.c statuselm.c type_get_cont.c type_get_env.c

MPI_TSOURCES = 

MPI_SOURCES = ${MPI_CSOURCES}
MPI_OBJECTS = ${MPI_COBJECTS}

default: ${libbuild_dir}/lib@MPILIBNAME@.a

profile: ${libbuild_dir}/libp@MPILIBNAME@.a

# default_all is the same as default, but without the RANLIB.  This
# can speed up the build (ranlibs can take a LONG time).  profile_all 
# is the same, but for the profile library
default_all: default_objs
default_objs: ${MPI_OBJECTS}
	${AR} ${libbuild_dir}/lib@MPILIBNAME@.a $?
profile_all: ${MPI_OBJECTS}
	${AR} ${libbuild_dir}/libp@MPILIBNAME@.a $?
default_conly: ${MPI_COBJECTS}
	${AR} ${libbuild_dir}/lib@MPILIBNAME@.a $?
	${RANLIB} ${libbuild_dir}/lib@MPILIBNAME@.a

${MPI_OBJECTS} :  ${MPI_INCLUDE}

source_names:
	@echo ${MPI_CSOURCES}

.c.o:
	${CC} ${DEFS} ${INCLUDES} ${CFLAGS} ${OPTFLAGSC} ${OPTFLAGS} -c $<

${libbuild_dir}/lib@MPILIBNAME@.a: ${MPI_OBJECTS}
	${AR} $@ $?
	${RANLIB} $@

${libbuild_dir}/libp@MPILIBNAME@.a: ${MPI_OBJECTS}
	${AR} $@ $?
	${RANLIB} $@
# We need to clean the srcdir of any .o files because they can confuse the
# VPATH build process
clean:
	rm -f *.o *~ ${srcdir}/*.o
