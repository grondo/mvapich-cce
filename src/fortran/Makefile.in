SHELL         = @SHELL@
@SET_MAKE@
@VPATH@
srcdir        = @srcdir@
subname       = @subname@
prefix        = @prefix@
exec_prefix   = @exec_prefix@
includedir    = @includedir@
libdir        = @libdir@
bindir        = @bindir@
sysconfdir    = @sysconfdir@
libbuild_dir  = @libbuild_dir@
f77includedir = @f77includedir@
f77libdir     = @f77libdir@
f77bindir     = @f77bindir@
F77           = @F77@
FLIBNAME      = @FLIBNAME@
FWRAPNAME     = @FWRAPNAME@
SUBDIRS       = src

# Package and version for building a separate distribution
PACKAGE = mpifort
VERSION = 1.0

PROGRAMS       =
other_PROGRAMS =

all: Makefile ${PROGRAMS} flibs

# A phony target
flibs:
	@cd src ; ${MAKE} all
	@if [ "@MPI_WITH_PMPI@" != "yes" ] ; then \
	    cd src ; ${MAKE} profile ; fi

OBJECTS = 
SOURCES = 
PROGRAM_SOURCES = 
ALL_SOURCES = ${PROGRAM_SOURCES} ${SOURCES} 

.SUFFIXES:
.SUFFIXES: .o .c .f

#
# There are two install targets.  The first is the usual; the
# second is a subset used for installing multiple Fortran wrapper libraries
# for a single MPICH installation
# Use cp -p for the libraries to preserve modification times
install: src/lib${FLIBNAME}.a
	if [ ! -d ${f77includedir} ] ; then mkdir ${f77includedir} ; fi
	if [ ! -d ${f77libdir} ] ; then mkdir ${f77libdir} ; fi
	cp include/mpif.h ${f77includedir}/mpif.h
	cp include/mpi_fortdefs.h ${includedir}/mpi_fortdefs.h
	cp -p ${libbuild_dir}/lib${FLIBNAME}.a ${f77libdir}/lib${FLIBNAME}.a
	cp -p ${libbuild_dir}/lib${FWRAPNAME}.a ${f77libdir}/lib${FWRAPNAME}.a
	cp -p ${libbuild_dir}/lib${FLIBNAME}fsup.a ${f77libdir}/lib${FLIBNAME}fsup.a
	cp src/mpif77 ${f77bindir}/mpif77${subname}
	cp src/mpif77.conf ${sysconfdir}/mpif77${subname}.conf

uninstall:
	-rm ${f77includedir}/mpif.h
	-rm ${includedir}/mpi_fortdefs.h
	-rm ${f77libdir}/lib${FLIBNAME}.a
	-rm ${f77libdir}/lib${FLIBNAME}fsup.a
	-rm ${f77libdir}/lib${FWRAPNAME}.a
	-rm ${f77bindir}/mpif77${subname}
	-rm ${sysconfdir}/mpif77${subname}.conf

# This is the target to use when installing an altenate compiler
#	cp include/mpif.h ${f77includedir}/mpif.h
#	cp include/mpi_fortdefs.h ${includedir}/mpi_fortdefs.h
install-alt: src/lib${FLIBNAME}.a
	if [ ! -d ${f77includedir} ] ; then mkdir ${f77includedir} ; fi
	if [ ! -d ${f77libdir} ] ; then mkdir ${f77libdir} ; fi
	cp -p ${libbuild_dir}/lib${FLIBNAME}.a ${f77libdir}/lib${FLIBNAME}.a
	cp -p ${libbuild_dir}/lib${FWRAPNAME}.a ${f77libdir}/lib${FWRAPNAME}.a
	cp -p ${libbuild_dir}/lib${FLIBNAME}fsup.a ${f77libdir}/lib${FLIBNAME}fsup.a
	cp src/mpif77 ${f77bindir}/mpif77${subname}
	cp src/mpif77.conf ${sysconfdir}/mpif77${subname}.conf

clean: 
	@-rm -f work.pc work.pcl
	@-rm -f *.o *~ ${PROGRAMS} ${other_PROGRAMS} core TAGS
	@-for dir in ${SUBDIRS} ; do \
	    (cd $$dir ; ${MAKE} clean ) ; done
distclean: clean
	@-rm -f config.status config.cache config.log config.system Makefile 
	@-rm -f mpi_fortconf.h
	@-for dir in ${SUBDIRS} ; do \
	    (cd $$dir ; ${MAKE} distclean ) ; done
	@-rm -f include/mpif.h include/mpi_fortdefs.h include/mpif_bottom.h

maintainer-clean: distclean 
	@-rm -f configure 
	@-for dir in ${SUBDIRS} ; do\
	    (cd $$dir ; ${MAKE} maintainer-clean ) ; done

configure: configure.in makeconfigure
	./makeconfigure

f77name:
	@echo "${F77}"
f77in_clibs:
	@echo "@F77_IN_C_LIBS@"
f90_suffix:
	@echo "@F90_SUFFIX@"
f90_modincflag:
	@echo "@F90_MODINCFLAG@"	
#
# Create a distribution (make dist)

DIST_COMMON = configure.in configure Makefile.in README
HEADERS = 
DISTFILES = ${DIST_COMMON} ${ALL_SOURCES} ${HEADERS} ${DEP_SOURCES}

distdir = ${PACKAGE}-${VERSION}
dist: distdir 
	-chmod -R a+r ${distdir}
	tar cf - ${distdir} | gzip > ${distdir}.tar.gz
	-rm -rf ${distdir}
distdir: ${DISTFILES}
	-rm -rf ${distdir}
	mkdir ${distdir}
	-chmod 777 ${distdir}
	@for file in ${DISTFILES}; do \
	  d=${srcdir}; \
	  if test -f $$d/$$file; then \
	    cp -p $$d/$$file ${distdir}/$$file; \
	  else \
	    echo "Could not find $$file" ; \
	  fi; \
	done
