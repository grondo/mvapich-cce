dnl Process this file with autoconf to produce a configure script.
AC_INIT(mpptest.c)
AC_PREREQ(2.13)   dnl needed for SHELL, added in 2.13
AC_CONFIG_AUX_DIR(config)   dnl for tools needed for configure
AM_INIT_AUTOMAKE(perftest,1.3a)
dnl Remove any derived files just in case a VPATH build is used
dnl No longer needed - AM_INIT_AUTOMAKE has an alternative test
AM_CONFIG_HEADER(mpptestconf.h)

AC_SUBST(COPTIONS)
PAC_ARG_CC_COMMON

AC_ARG_ENABLE(echo,
[--enable-echo    - Turn on echoing from within the configure script],
set -x)

dnl PAC_ARG_CC_COMMON adds enable-strict
dnl AC_ARG_ENABLE(strict,[--enable-strict - Turn on strict debugging with gcc],
dnl COPTIONS="$COPTIONS -Wall -Wstrict-prototypes -Wmissing-prototypes -Wundef -Wpointer-arith -Wbad-function-cast -ansi")

AC_ARG_ENABLE(restrict,
[--enable-restrict - Check for C restrict keyword (or similar)],
use_restrict=$enableval,use_restrict="yes")

PAC_ARG_CACHING 

AC_ARG_ENABLE(fortran,
[--enable-fortran - Build with Fortran],
enable_fortran=$enableval,enable_fortran="yes")
#
# Turn off the other languages (otherwise tested for in ARG_MPI_TYPES)
enable_cxx=no
enable_f90=no

dnl Handle the case that we are configuring from within an MPICH build
PAC_ARG_MPICH_BUILDING

dnl Include --with options for various MPI implementations
dnl The default is included to make makedist work; plus this IS part of
dnl the MPICH release.
PAC_ARG_MPI_TYPES(mpich)

dnl Checks for programs.
if test "$pac_lib_mpi_is_building" != "yes" ; then
    # Only check these if we aren't building the MPICH libraries
    PAC_PROG_CC
    if test "$enable_fortran" = "yes" ; then
        AC_PROG_F77
    fi
fi
AC_SUBST(FOPTIONS)
PAC_PROG_MAKE

# Look for graphics programs
AC_CHECK_PROGS(GRAPHICS_PGM,cit gnuplot,"none")

dnl Push the compiler and use the test versions, if any.
PAC_LANG_PUSH_COMPILERS

PAC_C_OPTIMIZATION

dnl Checks for libraries.
AC_SEARCH_LIBS(fabs, m)
PAC_LIB_MPI

if test "$pac_lib_mpi_is_building" = "no" ; then
   # Look for MPI_Put and MPI_Alloc_mem
   # shmalloc is needed for SGI
   AC_CHECK_FUNCS(MPI_Put MPI_Get)
   AC_CHECK_FUNC(MPI_Alloc_mem,found_alloc=1,found_alloc=0)
   if test "$found_alloc" != 1 -a "$ac_cv_func_MPI_Put" = "yes" ; then
dnl       AC_CHECK_FUNCS(shmalloc)
       AC_SEARCH_LIBS(shmalloc,sma,AC_DEFINE(HAVE_SHMALLOC))
dnl   else 
dnl       AC_DEFINE(HAVE_MPI_ALLOC_MEM)
   fi
fi

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h stdlib.h string.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_TIME
AC_STRUCT_TM
AC_C_CONST
if test $use_restrict = "yes" ; then
    PAC_C_RESTRICT
else
    AC_DEFINE(restrict,)
fi
AC_MSG_CHECKING([for long long])
AC_TRY_COMPILE(,[long long i;],have_long_long="yes",have_long_long="no")
AC_MSG_RESULT($have_long_long)
if test $have_long_long = "yes" ; then
    AC_DEFINE(HAVE_LONG_LONG)
fi
dnl Checks for library functions.

PAC_LANG_POP_COMPILERS

if test "$pac_lib_mpi_is_building" = "yes" ; then
   # At the very end, make sure we substitute the correct commands
   CC="$MPICC"
   if test -n "$MPIF77" ; then
       # Only replace F77 if MPIF77 is defined
       F77="$MPIF77"
   fi
fi

dnl
dnl Automake generates bogus rules for rebuilding configure.  Fix them 
dnl up here
if test -x makeconfigure ; then
    AUTOCONF=./makeconfigure ; 
else
    AUTOCONF=true
fi
AUTOHEADER=true
if test -x makeconfigure ; then
    :
else
    AUTOMAKE=true
fi
ACLOCAL=true
dnl

AC_OUTPUT(Makefile)
